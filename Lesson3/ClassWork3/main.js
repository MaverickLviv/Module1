// - створити функцію яка приймає масив та виводить його


    // let array =(`1,2,3,4,5`);
    //
    //     function printArray =(arr) {
    //
    // for (i = 0; i < array.length; i++)
    //     document.write(<div>${arr[i]}</div>)
    //     console.log(array[i]);
    // }
    // }
    // printArray(array);


// - створити функцію яка приймає три числа та виводить найменьше. (Без Math.min!)
// применить if else
// сравнивать каждое число с другими в условии
// если a меньше b и меньше c - вывести a
// иначе если b меньше a и меньше c вывести b
// иначе вывести c

    function min(a, b, c) {
        if (a < b && a < c) ;
        console.log('a');
    }
{
        else (b < a && b < c);
        console.log('b');
}
    console.log('c');










// - створити функцію яка приймає три числа та виводить найбільше. (Без Math.max!)
// - створити функцію яка повертає найбільше число з масиву
// - створити функцію яка повертає найменьше число з масиву
// - створити функцію яка приймає масив чисел, сумує значення елементів масиву та повертає його. Приклад [1,2,10]->13
// - створити функцію яка приймає масив чисел та повертає середнє арифметичне його значень.
// - створити функцію яка заповнює масив рандомними числами
// (цей код генерує рандомні числа в діапазоні від 0 до 100 - Math.round(Math.random()*100)) та виводить його.
//     Для виведення використати попередню функцію.
// - Створити функцію яка приймає масив будь яких объектів, та повертає масив ключів всіх обєктів
// EXAMPLE:
//     [{name: 'Dima', age: 13}, {model: 'Camry'}]  ===> [ name, age, model ]
//
//     - Створити функцію яка приймає масив будь яких объектів, та повертає масив значень всіх обєктів
// EXAMPLE:
//     [{name: 'Dima', age: 13}, {model: 'Camry'}]  ===> [ Dima, 13, Camry ]

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// - створити функцію яка приймає три числа та виводить найбільше. (Без Math.max!)

// как в предыдущем задании, но число должно быть больше
//
// - створити функцію яка повертає найбільше число з масиву
//
// создать переменную max и дать ей значение 0 элемента масива
// в цикле перебрать масив и на каждой итерации сравнивать значение max с элементом масива
// если значение элемента больше присваивать его переменной max
// вывести max
//
// - створити функцію яка повертає найменьше число з масиву
//
// как в предыдущем, но но сравнивать min меньше значения элемента
//
// - створити функцію яка приймає масив чисел, сумує значення елементів масиву та повертає його. Приклад [1,2,10]->13
//
// создать переменную sum = 0
// в цикле добавлять к текущему значению sum значение элемента (через +=)
// вывести sum
//
// - створити функцію яка приймає масив чисел та повертає середнє арифметичне його значень.
//
// посчитать сумму, как в предыдущем и разделить на количество элементов
//
// - створити функцію яка заповнює масив рандомними числами
// (цей код генерує рандомні числа в діапазоні від 0 до 100 - Math.round(Math.random()*100)) та виводить його.
//     Для виведення використати попередню функцію.
//
// создать пустой массив
// создать цикл
// в условии подставить число, которое ограничит количество итераций
// это может быть параметр функции, который будет передаваться при вызове
// на итерации сохранять в массив число возвращаемое Math.round(Math.random()*100))
// вызвать функцию для вывода масива и передать в нее массив
//
// - Створити функцію яка приймає масив будь яких объектів, та повертає масив ключів всіх обєктів
// EXAMPLE:
//     [{name: 'Dima', age: 13}, {model: 'Camry'}]  ===> [ name, age, model ]
//
// создать пустой массив
// нужен внешний и внутренний цикл
// во внешнем перебирается массив объектов
// на итерации создать внутренний цикл фор ин который перебирает ключи объекта
// сохранять ключ в созданный массив
//

    // - Створити функцію яка приймає масив будь яких объектів, та повертає масив значень всіх обєктів
// EXAMPLE:
//     [{name: 'Dima', age: 13}, {model: 'Camry'}]  ===> [ Dima, 13, Camry ]
//
// то же, но во внутреннем цикле сохранять в масив объект[ключ]